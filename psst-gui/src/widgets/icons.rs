use druid::{kurbo::BezPath, widget::prelude::*, Affine, Color, Key, Size};

pub static HOME: SvgIcon = SvgIcon {
    svg_path: "M8.17377 3.16499C8.12724 3.12048 8.06534 3.09564 8.00095 3.09564C7.93657 3.09564 7.87467 3.12048 7.82814 3.16499L2.07501 8.66092C2.05058 8.68429 2.03114 8.71238 2.01787 8.74348C2.00461 8.77458 1.99779 8.80804 1.99782 8.84186L1.99689 14C1.99689 14.2652 2.10224 14.5195 2.28978 14.7071C2.47732 14.8946 2.73167 15 2.99689 15H6.00001C6.13262 15 6.2598 14.9473 6.35357 14.8535C6.44734 14.7598 6.50002 14.6326 6.50002 14.5V10.25C6.50002 10.1837 6.52635 10.1201 6.57324 10.0732C6.62012 10.0263 6.68371 9.99998 6.75002 9.99998H9.25002C9.31632 9.99998 9.37991 10.0263 9.42679 10.0732C9.47368 10.1201 9.50002 10.1837 9.50002 10.25V14.5C9.50002 14.6326 9.55269 14.7598 9.64646 14.8535C9.74023 14.9473 9.86741 15 10 15H13.0019C13.2671 15 13.5215 14.8946 13.709 14.7071C13.8965 14.5195 14.0019 14.2652 14.0019 14V8.84186C14.0019 8.80804 13.9951 8.77458 13.9818 8.74348C13.9686 8.71238 13.9491 8.68429 13.9247 8.66092L8.17377 3.16499Z M15.3409 7.62969L13.0034 5.39344V2C13.0034 1.86739 12.9508 1.74021 12.857 1.64645C12.7632 1.55268 12.636 1.5 12.5034 1.5H11.0034C10.8708 1.5 10.7437 1.55268 10.6499 1.64645C10.5561 1.74021 10.5034 1.86739 10.5034 2V3L8.69344 1.26937C8.52407 1.09812 8.27219 1 8.00001 1C7.72876 1 7.47751 1.09813 7.30813 1.26969L0.661262 7.62906C0.466887 7.81656 0.442512 8.125 0.619387 8.32812C0.663803 8.3794 0.718187 8.42109 0.77923 8.45068C0.840273 8.48027 0.906698 8.49712 0.974462 8.50022C1.04223 8.50332 1.10991 8.4926 1.1734 8.4687C1.23689 8.44481 1.29485 8.40825 1.34376 8.36125L7.82813 2.165C7.87466 2.12049 7.93656 2.09565 8.00094 2.09565C8.06533 2.09565 8.12723 2.12049 8.17376 2.165L14.6587 8.36125C14.7543 8.45286 14.8822 8.50285 15.0146 8.50028C15.1469 8.4977 15.2728 8.44276 15.3647 8.3475C15.5566 8.14875 15.5406 7.82062 15.3409 7.62969Z",
    orig_size: Size::new(16.0, 16.0),
    op: PaintOp::Fill,
};
pub static LIBRARY: SvgIcon = SvgIcon {
    svg_path: "M3.5 0V1.5H13V13L14.5 14V0H3.5Z M1.5 2.5V16L6.75 12.125L12 16V2.5H1.5Z",
    orig_size: Size::new(16.0, 16.0),
    op: PaintOp::Fill,
};
pub static SEARCH: SvgIcon = SvgIcon {
    svg_path: "M14.2716 13.1684L11.3313 10.2281C12.0391 9.28573 12.4213 8.13865 12.42 6.96C12.42 3.94938 9.97062 1.5 6.96 1.5C3.94938 1.5 1.5 3.94938 1.5 6.96C1.5 9.97062 3.94938 12.42 6.96 12.42C8.13865 12.4213 9.28573 12.0391 10.2281 11.3313L13.1684 14.2716C13.3173 14.4046 13.5114 14.4756 13.711 14.47C13.9105 14.4645 14.1004 14.3827 14.2415 14.2415C14.3827 14.1004 14.4645 13.9105 14.47 13.711C14.4756 13.5114 14.4046 13.3173 14.2716 13.1684ZM3.06 6.96C3.06 6.18865 3.28873 5.43463 3.71727 4.79328C4.14581 4.15192 4.7549 3.65205 5.46753 3.35687C6.18017 3.06169 6.96433 2.98446 7.72085 3.13494C8.47738 3.28542 9.17229 3.65686 9.71772 4.20228C10.2631 4.74771 10.6346 5.44262 10.7851 6.19915C10.9355 6.95567 10.8583 7.73983 10.5631 8.45247C10.2679 9.1651 9.76808 9.77419 9.12672 10.2027C8.48537 10.6313 7.73135 10.86 6.96 10.86C5.92604 10.8588 4.93478 10.4475 4.20365 9.71635C3.47253 8.98522 3.06124 7.99396 3.06 6.96Z",
    orig_size: Size::new(16.0, 16.0),
    op: PaintOp::Fill,
};
pub static BACK: SvgIcon = SvgIcon {
    svg_path: "M9.70711 0.292893C10.0976 0.683417 10.0976 1.31658 9.70711 1.70711L2.41421 9L9.70711 16.2929C10.0976 16.6834 10.0976 17.3166 9.70711 17.7071C9.31658 18.0976 8.68342 18.0976 8.29289 17.7071L0.292893 9.70711C-0.0976311 9.31658 -0.0976311 8.68342 0.292893 8.29289L8.29289 0.292893C8.68342 -0.0976311 9.31658 -0.0976311 9.70711 0.292893Z",
    orig_size: Size::new(10.0, 18.0),
    op: PaintOp::Fill,
};
pub static PLAY: SvgIcon = SvgIcon {
    svg_path: "M4.92623 21.4262L19.9262 12.4262L4.92623 3.42623V21.4262Z",
    orig_size: Size::new(24.0, 24.0),
    op: PaintOp::Fill,
};
pub static PAUSE: SvgIcon = SvgIcon {
    svg_path: "M10.9262 20.6762H7.17623V4.17623H10.9262V20.6762ZM17.6762 20.6762H13.9262V4.17623H17.6762V20.6762Z",
    orig_size: Size::new(24.0, 24.0),
    op: PaintOp::Fill,
};
pub static SKIP_BACK: SvgIcon = SvgIcon {
    svg_path: "M7.15139 3.42623V11.0912L19.9262 3.42623V21.4262L7.15139 13.7612V21.4262H4.92623V3.42623H7.15139Z",
    orig_size: Size::new(24.0, 24.0),
    op: PaintOp::Fill,
};
pub static SKIP_FORWARD: SvgIcon = SvgIcon {
    svg_path: "M17.7011 3.42623V11.0912L4.92623 3.42623V21.4262L17.7011 13.7612V21.4262H19.9262V3.42623H17.7011Z",
    orig_size: Size::new(24.0, 24.0),
    op: PaintOp::Fill,
};
pub static CONFIG: SvgIcon = SvgIcon {
    svg_path: "M13.3629 9.4286C12.6053 9.35588 11.8432 9.51253 11.1808 9.8771C10.5184 10.2417 9.98817 10.7963 9.66262 11.4652C9.33708 12.134 9.23216 12.8843 9.36225 13.6133C9.49234 14.3423 9.85106 15.0145 10.3893 15.5377C10.9276 16.0609 11.619 16.4096 12.369 16.536C13.119 16.6624 13.8909 16.5605 14.579 16.244C15.2671 15.9276 15.8377 15.4121 16.2128 14.7683C16.5878 14.1244 16.749 13.3836 16.6742 12.6473C16.5889 11.8219 16.2126 11.0505 15.6091 10.4639C15.0056 9.87725 14.212 9.5115 13.3629 9.4286V9.4286ZM22.2526 13C22.2503 13.3901 22.2208 13.7796 22.1644 14.1658L24.7725 16.1542C24.886 16.2457 24.9626 16.3734 24.9884 16.5146C25.0143 16.6557 24.9879 16.8012 24.9138 16.9252L22.4465 21.0748C22.3715 21.1976 22.2544 21.2907 22.1157 21.3378C21.9771 21.3849 21.8257 21.3829 21.6884 21.3321L19.0982 20.3183C18.9554 20.263 18.8007 20.2431 18.6479 20.2602C18.4952 20.2773 18.3492 20.331 18.2231 20.4164C17.8278 20.6811 17.4124 20.9161 16.9805 21.1196C16.8447 21.1838 16.7273 21.2794 16.6385 21.3982C16.5498 21.5169 16.4925 21.655 16.4717 21.8004L16.0834 24.4858C16.0579 24.6276 15.9826 24.7564 15.8702 24.8502C15.7578 24.944 15.6154 24.997 15.4673 25H10.5327C10.387 24.9976 10.2466 24.947 10.1345 24.8565C10.0224 24.7661 9.94533 24.6413 9.91598 24.5026L9.52831 21.8211C9.50654 21.6742 9.44776 21.5347 9.35718 21.4152C9.2666 21.2956 9.14704 21.1997 9.00912 21.1359C8.57773 20.9335 8.16374 20.6978 7.77113 20.431C7.64542 20.346 7.49993 20.2927 7.34776 20.276C7.19559 20.2593 7.04153 20.2796 6.89946 20.3351L4.30982 21.3484C4.17259 21.3992 4.02131 21.4013 3.88265 21.3543C3.74398 21.3073 3.62682 21.2143 3.5518 21.0916L1.08447 16.9421C1.01029 16.8181 0.98378 16.6725 1.00966 16.5313C1.03554 16.3902 1.11214 16.2625 1.2258 16.171L3.43008 14.4888C3.55084 14.3956 3.64575 14.2746 3.7062 14.1367C3.76664 13.9988 3.79071 13.8485 3.77621 13.6993C3.75544 13.4654 3.74275 13.2321 3.74275 12.9983C3.74275 12.7645 3.75486 12.5346 3.77621 12.3058C3.78912 12.1575 3.76388 12.0084 3.70275 11.8719C3.64162 11.7355 3.54653 11.616 3.42604 11.5241L1.22292 9.84187C1.1111 9.74996 1.03612 9.62273 1.01112 9.48247C0.986123 9.34222 1.0127 9.19788 1.0862 9.07477L3.55353 4.92523C3.62846 4.80242 3.74558 4.70927 3.88426 4.66218C4.02293 4.61509 4.17426 4.6171 4.31156 4.66785L6.90176 5.68168C7.0446 5.73696 7.19932 5.75694 7.35205 5.73981C7.50478 5.72268 7.65076 5.66899 7.7769 5.58355C8.17221 5.31895 8.5876 5.08388 9.0195 4.88037C9.15529 4.81622 9.27273 4.72056 9.36147 4.60184C9.45021 4.48311 9.50751 4.34498 9.52831 4.19963L9.91656 1.51421C9.94206 1.37238 10.0174 1.24357 10.1298 1.14978C10.2422 1.05599 10.3846 1.00305 10.5327 1H15.4673C15.613 1.00245 15.7534 1.05305 15.8655 1.14346C15.9776 1.23387 16.0547 1.3587 16.084 1.49738L16.4717 4.17888C16.4935 4.32583 16.5522 4.46528 16.6428 4.58482C16.7334 4.70437 16.853 4.80031 16.9909 4.86411C17.4223 5.06652 17.8363 5.30223 18.2289 5.56897C18.3546 5.65399 18.5001 5.70727 18.6522 5.72401C18.8044 5.74075 18.9585 5.72042 19.1005 5.66486L21.6902 4.65159C21.8274 4.60079 21.9787 4.5987 22.1174 4.64568C22.256 4.69266 22.3732 4.7857 22.4482 4.90841L24.9155 9.05794C24.9897 9.18192 25.0162 9.32746 24.9903 9.46865C24.9645 9.60985 24.8879 9.73753 24.7742 9.82897L22.5699 11.5112C22.4486 11.6041 22.3532 11.725 22.2922 11.8629C22.2313 12.0008 22.2067 12.1513 22.2209 12.3007C22.2399 12.5329 22.2526 12.7662 22.2526 13Z",
    orig_size: Size::new(26.0, 26.0),
    op: PaintOp::Stroke { width: 2.0 },
};

#[derive(Copy, Clone)]
pub enum PaintOp {
    Fill,
    Stroke { width: f64 },
}

pub struct SvgIcon {
    svg_path: &'static str,
    orig_size: Size,
    op: PaintOp,
}

impl SvgIcon {
    pub fn scale(&self, to_size: impl Into<Size>) -> Icon {
        let to_size = to_size.into();
        let bez_path = BezPath::from_svg(self.svg_path).expect("Failed to parse SVG");
        let scale = Affine::scale_non_uniform(
            to_size.width / self.orig_size.width,
            to_size.height / self.orig_size.height,
        );
        Icon::new(self.op, bez_path, to_size, scale)
    }
}

pub const ICON_COLOR: Key<Color> = Key::new("app.icon-color");

pub struct Icon {
    op: PaintOp,
    bez_path: BezPath,
    size: Size,
    scale: Affine,
}

impl Icon {
    pub fn new(op: PaintOp, bez_path: BezPath, size: Size, scale: Affine) -> Self {
        Icon {
            op,
            bez_path,
            size,
            scale,
        }
    }
}

impl<T> Widget<T> for Icon {
    fn event(&mut self, _ctx: &mut EventCtx, _ev: &Event, _data: &mut T, _env: &Env) {}

    fn lifecycle(&mut self, _ctx: &mut LifeCycleCtx, _ev: &LifeCycle, _data: &T, _env: &Env) {}

    fn update(&mut self, _ctx: &mut UpdateCtx, _old_data: &T, _data: &T, _env: &Env) {}

    fn layout(&mut self, _ctx: &mut LayoutCtx, bc: &BoxConstraints, _data: &T, _env: &Env) -> Size {
        bc.constrain(self.size)
    }

    fn paint(&mut self, ctx: &mut PaintCtx, _data: &T, env: &Env) {
        let color = env.get(ICON_COLOR);
        ctx.with_save(|ctx| {
            ctx.transform(self.scale);
            match self.op {
                PaintOp::Fill => ctx.fill(&self.bez_path, &color),
                PaintOp::Stroke { width } => ctx.stroke(&self.bez_path, &color, width),
            }
        });
    }
}
